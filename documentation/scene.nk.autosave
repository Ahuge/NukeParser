#! C:/Program Files/Nuke9.0v6/nuke-9.0.6.dll -nx
version 9.0 v6
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="-8" y="-8" w="1936" h="1096" maximized="1" screen="0">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="1257" stretch="1"/>
            <splitter orientation="2">
                <split size="0"/>
                <dock id=""/>
                <split size="1030"/>
                <dock id="" activePageId="DAG.1">
                    <page id="DAG.1"/>
                    <page id="Curve Editor.1"/>
                    <page id="DopeSheet.1"/>
                </dock>
            </splitter>
            <split size="615"/>
            <dock id="" activePageId="Properties.1">
                <page id="Properties.1"/>
            </dock>
        </splitter>
    </window>
    <window x="1920" y="0" w="1936" h="1084" screen="1">
        <splitter orientation="2">
            <split size="1045"/>
            <dock id="" activePageId="uk.co.thefoundry.scripteditor.1">
                <page id="Viewer.1"/>
                <page id="uk.co.thefoundry.scripteditor.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
inputs 0
name D:/Users/Alex/Documents/GitHub/NukeParser/documentation/scene.nk
format "2048 1556 0 0 2048 1556 1 2K_Super_35(full-ap)"
proxy_type scale
proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
}
Viewer {
inputs 0
frame 1
frame_range 1-100
name Viewer1
xpos -40
ypos -10
}
StickyNote {
inputs 0
name StickyNote1
label "node_dic = \{\}\n\ndef getItem(menu):\n\n    '''\n    Recursive function to browse all menus and submenus\n    of the Nodes menu to retrieve all items and commands\n    to execute them.\n    '''\n    if isinstance(menu,nuke.Menu):\n        for item in menu.items():\n            if item.name() in \[\"Other\", \"All plugins\"] or len(menu.name()) == 1 or len(item.name()) == 1:\n                print len(item.name()), item.name()\n                getItem(item)\n    else:\n    #the menu is actually a command\n        if (menu.name() not in node_dic.values()):\n            node_dic\[menu] = menu.name()\n\n\ngetItem(nuke.menu(\"Nodes\"))\n\npath = r\"D:\\Users\\Alex\\Documents\\GitHub\\NukeParser\\documentation\\_default\"\nfor name in node_dic.values():\n    node = nuke.createNode(name)\n    with open(path+r\"\\%s.txt\" % name, \"wb\") as fh:\n        fh.write(\"\")\n    with open(path+r\"\\%s.txt\" % name, \"a\") as fh:\n        for knob in node.knobs().values():\n            words = \" \".join(\[knob.name(), knob.Class(), str(knob.defaultValue()) if hasattr(knob, \"defaultValue\") else \"None\", \"\\n\"])\n            fh.write(words)\n\n    nukescripts.node_delete(popupOnError=True)\n\n\n"
xpos -1942
ypos -1245
}
Grade {
inputs 0
name Grade1
xpos 355
ypos 66
}
